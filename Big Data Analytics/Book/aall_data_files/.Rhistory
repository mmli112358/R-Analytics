x <- scan()
4: 3 5 78 29
8: 34 5 1 78
12:
Read 11 items
x <- scan()
(x <- scan("http://www.ats.ucla.edu/stat/data/scan.txt", what = list(age = 0,
name = "")))
x
x <- scan("http://www.ats.ucla.edu/stat/data/scan.txt", what = list(NULL, name = character()))
x
(x <- x[sapply(x, length) > 0])
test <- read.table("http://www.ats.ucla.edu/stat/data/test.txt", header = TRUE)
test
install.packages("car"); install.packages("ggplot2");
install.packages("pastecs"); install.packages("psych");
library(car); library(ggplot2); library(pastecs); library(psych); library(Rcmdr)
install(Rcmdr)
install.packages("Rcmdr")
library(Rcmdr)
library(car);
library(ggplot2);
library(pastecs);
library(psych);
library(Rcmdr)
dlf <- read.delim("DownloadFestival.dat", header=TRUE)
setwd("C:\Users\Irene\Downloads")
setwd("C:/Users/Irene/Downloads")
setwd("C:/Users/Irene/Desktop/Big Data Analytics/Book")
dlf <- read.delim("DownloadFestival.dat", header=TRUE)
setwd("C:/Users/Irene/Desktop/Big Data Analytics/Book/aall_data_files")
dlf <- read.delim("DownloadFestival.dat", header=TRUE)
hist.day1 <- ggplot(dlf, aes(day1)) + opts(legend.position = "none") +
geom_histogram(aes(y = ..density..), colour= "black", fill = "white") + labs(x
= "Hygiene score on day 1", y = "Density")
library(ggplot)
hist.day1 <- ggplot(dlf, aes(day1)) + opts(legend.position = "none")+geom_histogram(aes(y = ..density..), colour = "black", fill = "white") + labs(x= "Hygiene score on day 1", y = "Density")
hist.day1 <- ggplot(dlf, aes(day1)) + +geom_histogram(aes(y = ..density..), colour = "black", fill = "white") + labs(x= "Hygiene score on day 1", y = "Density")
hist.day1 <- ggplot(dlf, aes(day1))  +geom_histogram(aes(y = ..density..), colour = "black", fill = "white") + labs(x= "Hygiene score on day 1", y = "Density")
hist.day1
hist.day1 + stat_function(fun = dnorm, args = list(mean = mean(dlf$day1, na.rm =
TRUE), sd = sd(dlf$day1, na.rm = TRUE)), colour = "black", size = 1)
qqplot.day1 <- qplot(sample = dlf$day1, stat="qq")
qqplot.day1
describe(dlf$day1)
stat.desc(variable name, basic = TRUE, norm = FALSE)
stat.desc(dlf$day1, basic = FALSE, norm = TRUE)
